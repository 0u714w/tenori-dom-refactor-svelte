import './Controls.css.proxy.js';
/* src/Controls.svelte generated by Svelte v3.38.2 */
import {
	SvelteComponent,
	append,
	attr,
	create_component,
	destroy_component,
	detach,
	element,
	init,
	insert,
	mount_component,
	noop,
	safe_not_equal,
	space,
	transition_in,
	transition_out
} from "../web_modules/svelte/internal.js";

import VolumeControl from "./VolumeControl.js";
import TempoControl from "./TempoControl.js";
import ReleaseControl from "./ReleaseControl.js";
import WaveControl from "./WaveControl.js";
import OctaveControl from "./OctaveControl.js";

function create_fragment(ctx) {
	let section;
	let volumecontrol;
	let t0;
	let tempocontrol;
	let t1;
	let releasecontrol;
	let t2;
	let wavecontrol;
	let t3;
	let octavecontrol;
	let current;
	volumecontrol = new VolumeControl({});
	tempocontrol = new TempoControl({});
	releasecontrol = new ReleaseControl({});
	wavecontrol = new WaveControl({});
	octavecontrol = new OctaveControl({});

	return {
		c() {
			section = element("section");
			create_component(volumecontrol.$$.fragment);
			t0 = space();
			create_component(tempocontrol.$$.fragment);
			t1 = space();
			create_component(releasecontrol.$$.fragment);
			t2 = space();
			create_component(wavecontrol.$$.fragment);
			t3 = space();
			create_component(octavecontrol.$$.fragment);
			attr(section, "class", "svelte-d0kjob");
		},
		m(target, anchor) {
			insert(target, section, anchor);
			mount_component(volumecontrol, section, null);
			append(section, t0);
			mount_component(tempocontrol, section, null);
			append(section, t1);
			mount_component(releasecontrol, section, null);
			append(section, t2);
			mount_component(wavecontrol, section, null);
			append(section, t3);
			mount_component(octavecontrol, section, null);
			current = true;
		},
		p: noop,
		i(local) {
			if (current) return;
			transition_in(volumecontrol.$$.fragment, local);
			transition_in(tempocontrol.$$.fragment, local);
			transition_in(releasecontrol.$$.fragment, local);
			transition_in(wavecontrol.$$.fragment, local);
			transition_in(octavecontrol.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(volumecontrol.$$.fragment, local);
			transition_out(tempocontrol.$$.fragment, local);
			transition_out(releasecontrol.$$.fragment, local);
			transition_out(wavecontrol.$$.fragment, local);
			transition_out(octavecontrol.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(section);
			destroy_component(volumecontrol);
			destroy_component(tempocontrol);
			destroy_component(releasecontrol);
			destroy_component(wavecontrol);
			destroy_component(octavecontrol);
		}
	};
}

class Controls extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, null, create_fragment, safe_not_equal, {});
	}
}

export default Controls;